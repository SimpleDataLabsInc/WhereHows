{
  "models" : [ {
    "type" : "record",
    "name" : "Configurations",
    "namespace" : "com.linkedin.common",
    "doc" : "Configuration metadata aspect",
    "fields" : [ {
      "name" : "configurations",
      "type" : {
        "type" : "map",
        "values" : "string"
      },
      "doc" : "A key-value map to capture any other non-standardized properties for the dataset",
      "default" : { }
    } ]
  }, {
    "type" : "typeref",
    "name" : "CorpGroupUrn",
    "namespace" : "com.linkedin.common",
    "doc" : "Corporate group's AD/LDAP login",
    "ref" : "string",
    "java" : {
      "class" : "com.linkedin.common.urn.CorpGroupUrn"
    },
    "validate" : {
      "com.linkedin.common.validator.TypedUrnValidator" : {
        "accessible" : true,
        "entityType" : "corpGroup",
        "owningTeam" : "urn:li:internalTeam:security",
        "constructable" : true,
        "name" : "CorpGroup",
        "namespace" : "li",
        "doc" : "Corporate group's AD/LDAP login",
        "owners" : [ "urn:li:corpuser:fbar", "urn:li:corpuser:bfoo" ],
        "fields" : [ {
          "name" : "groupName",
          "doc" : "The name of the AD/LDAP group.",
          "type" : "string",
          "maxLength" : 64
        } ],
        "maxLength" : 81
      }
    }
  }, {
    "type" : "typeref",
    "name" : "DatasetUrn",
    "namespace" : "com.linkedin.common",
    "doc" : "Standardized dataset identifier.",
    "ref" : "string",
    "java" : {
      "coercerClass" : "com.linkedin.common.urn.DatasetUrnCoercer",
      "class" : "com.linkedin.common.urn.DatasetUrn"
    },
    "validate" : {
      "com.linkedin.common.validator.TypedUrnValidator" : {
        "accessible" : true,
        "entityType" : "dataset",
        "owningTeam" : "urn:li:internalTeam:datahub",
        "constructable" : true,
        "name" : "Dataset",
        "namespace" : "li",
        "doc" : "Standardized dataset identifier.",
        "owners" : [ "urn:li:corpuser:fbar", "urn:li:corpuser:bfoo" ],
        "fields" : [ {
          "name" : "platform",
          "doc" : "Standardized platform urn where dataset is defined.",
          "type" : "com.linkedin.common.urn.DataPlatformUrn"
        }, {
          "name" : "datasetName",
          "doc" : "Dataset native name e.g. <db>.<table>, /dir/subdir/<name>, or <name>",
          "type" : "string",
          "maxLength" : 210
        }, {
          "name" : "origin",
          "doc" : "Fabric type where dataset belongs to or where it was generated.",
          "type" : "com.linkedin.common.FabricType"
        } ],
        "maxLength" : 284
      }
    }
  }, {
    "type" : "typeref",
    "name" : "ProjectUrn",
    "namespace" : "com.linkedin.common",
    "doc" : "Project URN",
    "ref" : "string",
    "java" : {
      "coercerClass" : "com.linkedin.common.urn.ProjectUrnCoercer",
      "class" : "com.linkedin.common.urn.ProjectUrn"
    },
    "validate" : {
      "com.linkedin.common.validator.TypedUrnValidator" : {
        "accessible" : true,
        "entityType" : "project",
        "constructable" : true,
        "name" : "Project",
        "namespace" : "li",
        "doc" : "Project Urn",
        "owners" : [ "urn:li:corpuser:fbar", "urn:li:corpuser:bfoo" ],
        "fields" : [ {
          "name" : "name",
          "doc" : "Name of the project",
          "type" : "string",
          "maxLength" : 20
        } ],
        "maxLength" : 36
      }
    }
  }, {
    "type" : "typeref",
    "name" : "WorkflowUrn",
    "namespace" : "com.linkedin.common",
    "doc" : "Workflow URN",
    "ref" : "string",
    "java" : {
      "coercerClass" : "com.linkedin.common.urn.WorkflowUrnCoercer",
      "class" : "com.linkedin.common.urn.WorkflowUrn"
    },
    "validate" : {
      "com.linkedin.common.validator.TypedUrnValidator" : {
        "accessible" : true,
        "entityType" : "workflow",
        "constructable" : true,
        "name" : "Workflow",
        "namespace" : "li",
        "doc" : "Workflow Urn",
        "owners" : "urn:li:corpgroup:fbar",
        "fields" : [ {
          "name" : "name",
          "doc" : "Name of the workflow",
          "type" : "string",
          "maxLength" : 20
        } ],
        "maxLength" : 36
      }
    }
  }, {
    "type" : "record",
    "name" : "AspectVersion",
    "namespace" : "com.linkedin.metadata.aspect",
    "doc" : "A tuple of a specific metadata aspect and its version.",
    "fields" : [ {
      "name" : "aspect",
      "type" : "string",
      "doc" : "The FQCN of the metadata aspect, e.g. com.linkedin.common.Ownership"
    }, {
      "name" : "version",
      "type" : "long",
      "doc" : "The version of the metadata aspect"
    } ]
  }, {
    "type" : "typeref",
    "name" : "ProjectAspect",
    "namespace" : "com.linkedin.metadata.aspect",
    "doc" : "A union of all supported metadata aspects for a Project",
    "ref" : [ {
      "type" : "record",
      "name" : "ProjectInfo",
      "namespace" : "com.linkedin.project",
      "doc" : "Project information",
      "fields" : [ {
        "name" : "name",
        "type" : "string",
        "doc" : "Name of the project"
      }, {
        "name" : "description",
        "type" : "string",
        "doc" : "Description of the project",
        "optional" : true
      }, {
        "name" : "owner",
        "type" : "com.linkedin.common.CorpGroupUrn",
        "doc" : "Owner of the project"
      }, {
        "name" : "datasets",
        "type" : {
          "type" : "array",
          "items" : "com.linkedin.common.DatasetUrn"
        },
        "doc" : "List of datasets in this project.",
        "default" : [ ],
        "optional" : true
      }, {
        "name" : "configurations",
        "type" : "com.linkedin.common.Configurations",
        "doc" : "workflow configurations",
        "optional" : true
      }, {
        "name" : "workflows",
        "type" : {
          "type" : "array",
          "items" : "com.linkedin.common.WorkflowUrn"
        },
        "doc" : "List of workflows in this project.",
        "default" : [ ]
      } ]
    } ]
  }, {
    "type" : "record",
    "name" : "ProjectSnapshot",
    "namespace" : "com.linkedin.metadata.snapshot",
    "doc" : "A metadata snapshot for a specific Project entity.",
    "fields" : [ {
      "name" : "urn",
      "type" : "com.linkedin.common.ProjectUrn",
      "doc" : "URN for the entity the metadata snapshot is associated with."
    }, {
      "name" : "aspects",
      "type" : {
        "type" : "array",
        "items" : "com.linkedin.metadata.aspect.ProjectAspect"
      },
      "doc" : "The list of metadata aspects associated with the Project. Depending on the use case, this can either be all, or a selection, of supported aspects."
    } ]
  }, {
    "type" : "record",
    "name" : "SnapshotKey",
    "namespace" : "com.linkedin.metadata.snapshot",
    "doc" : "The Key for a metadata Snapshot.",
    "fields" : [ {
      "name" : "aspectVersions",
      "type" : {
        "type" : "array",
        "items" : "com.linkedin.metadata.aspect.AspectVersion"
      },
      "doc" : "A list of metadata aspects in the Snapshot and their versions"
    } ]
  }, {
    "type" : "record",
    "name" : "Project",
    "namespace" : "com.linkedin.project",
    "doc" : "Metadata for a project",
    "fields" : [ {
      "name" : "name",
      "type" : "string",
      "doc" : "Name of the project"
    }, {
      "name" : "info",
      "type" : "ProjectInfo",
      "doc" : "Information of the project",
      "optional" : true
    } ]
  }, "com.linkedin.project.ProjectInfo", {
    "type" : "record",
    "name" : "ProjectKey",
    "namespace" : "com.linkedin.project",
    "doc" : "Key for project resource",
    "fields" : [ {
      "name" : "name",
      "type" : "string",
      "doc" : "Name of the project",
      "validate" : {
        "strlen" : {
          "min" : 1,
          "max" : 20
        }
      }
    } ]
  }, {
    "type" : "record",
    "name" : "EmptyRecord",
    "namespace" : "com.linkedin.restli.common",
    "doc" : "An literally empty record.  Intended as a marker to indicate the absence of content where a record type is required.  If used the underlying DataMap *must* be empty, EmptyRecordValidator is provided to help enforce this.  For example,  CreateRequest extends Request<EmptyRecord> to indicate it has no response body.   Also, a ComplexKeyResource implementation that has no ParamKey should have a signature like XyzResource implements ComplexKeyResource<XyzKey, EmptyRecord, Xyz>.",
    "fields" : [ ],
    "validate" : {
      "com.linkedin.restli.common.EmptyRecordValidator" : { }
    }
  } ],
  "schema" : {
    "name" : "projects",
    "namespace" : "com.linkedin.project",
    "path" : "/projects",
    "schema" : "com.linkedin.project.Project",
    "doc" : "generated from: com.linkedin.project.rest.resources.Projects",
    "collection" : {
      "identifier" : {
        "name" : "project",
        "type" : "com.linkedin.project.ProjectKey",
        "params" : "com.linkedin.restli.common.EmptyRecord"
      },
      "supports" : [ "batch_get", "get" ],
      "methods" : [ {
        "method" : "get",
        "parameters" : [ {
          "name" : "aspects",
          "type" : "{ \"type\" : \"array\", \"items\" : \"string\" }",
          "default" : "[]"
        } ]
      }, {
        "method" : "batch_get",
        "parameters" : [ {
          "name" : "aspects",
          "type" : "{ \"type\" : \"array\", \"items\" : \"string\" }",
          "default" : "[]"
        } ]
      } ],
      "entity" : {
        "path" : "/projects/{project}",
        "subresources" : [ {
          "name" : "info",
          "namespace" : "com.linkedin.project",
          "path" : "/projects/{project}/info",
          "schema" : "com.linkedin.project.ProjectInfo",
          "doc" : "Rest.li entry point: /projects/{projectKey}/info\n\ngenerated from: com.linkedin.project.rest.resources.ProjectsInfoResource",
          "collection" : {
            "identifier" : {
              "name" : "infoId",
              "type" : "long"
            },
            "supports" : [ "create", "get" ],
            "methods" : [ {
              "method" : "create"
            }, {
              "method" : "get"
            } ],
            "entity" : {
              "path" : "/projects/{project}/info/{infoId}"
            }
          }
        }, {
          "annotations" : {
            "createOnly" : {
              "value" : [ "urn" ]
            }
          },
          "name" : "snapshot",
          "namespace" : "com.linkedin.project",
          "path" : "/projects/{project}/snapshot",
          "schema" : "com.linkedin.metadata.snapshot.ProjectSnapshot",
          "doc" : "Rest.li entry point: /projects/{projectKey}/snapshot\n\ngenerated from: com.linkedin.project.rest.resources.ProjectsSnapshot",
          "collection" : {
            "identifier" : {
              "name" : "snapshotId",
              "type" : "com.linkedin.metadata.snapshot.SnapshotKey",
              "params" : "com.linkedin.restli.common.EmptyRecord"
            },
            "supports" : [ "create", "get" ],
            "methods" : [ {
              "method" : "create"
            }, {
              "method" : "get"
            } ],
            "entity" : {
              "path" : "/projects/{project}/snapshot/{snapshotId}"
            }
          }
        } ]
      }
    }
  }
}